
# A jim version of the chaos animation.
# Derived from the animation of the same name within the
#  * 8 x 8 x 8 Cube Application Template, Version 7.0  Â© 2014 by Doug Domke
#  * Downloads of this template and upcoming versions, along with detailed
#  * instructions, are available at: http://d2-webdesign.com/cube

proc ::Chaos::Init {} {
	cube.begin
	# Array of lift shafts + floor and direction
	#     (0 = stopped, 1 = up, 2 = down)
	set ::Chaos::data [lrepeat 8 [lrepeat 8 { 0 0 }]]
	loop x 0 8 { loop y 0 8 {
		# Each lift shaft has a 1-in-7 chance of being selected.
		if {[rand 7] == 0} {
			lset ::Chaos::data $x $y "0 [rand 3]"
			# Show the lift
			cube.led $x $y 0
		} else {
			# stopped on floor -1
			lset ::Chaos::data $x $y "-1 0"
		}
	}}
	cube.commit
}

proc Chaos {} {

	# Reset colour
	bump_colour 0

	loop k 0 15 {
		::Chaos::Init

		loop j 0 50 {
			bump_colour -1

			loop x 0 8 { loop y 0 8 {
				lassign [lindex $::Chaos::data $x $y] floor dir
				if {$floor < 0} continue

				# Randomly change direction 1/3 of the time
				if {[rand 3] == 0} {
					set dir [rand 3]
					# Wipe column
					cube.column $x $y 0 0 0
				}

				switch $dir {
				    1 {
					# Going up.
					if {$floor < 7} {
						incr floor
					} else {
						incr floor -1
						set dir 2
					}
				    }
				    2 {
					# Going down.
					if {$floor > 0} {
						incr floor -1
					} else {
						incr floor
						set dir 1
					}
				    }
				}

				cube.led $x $y $floor
				lset ::Chaos::data $x $y "$floor $dir"
			}}
			delay 30
		}
	}

	cube.clear
}

if {!$interactive} { Chaos }

