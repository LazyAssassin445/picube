
# A jim version of the Sinewave animation.
# Derived from the animation of the same name within the
#  * 8 x 8 x 8 Cube Application Template, Version 7.0  Â© 2014 by Doug Domke
#  * Downloads of this template and upcoming versions, along with detailed
#  * instructions, are available at: http://d2-webdesign.com/cube

# The calculations take a while so build a lookup table first.
# Preparing the table also makes the animation run at the same speed on
# different models of Pi.
set tab [lrepeat 80 [lrepeat 4 [lrepeat 4 0]]]
loop i 0 80 { loop x 0 4 { loop y 0 4 {
	set key $(
		sqrt(pow(3.5 - $x, 2) + pow(3.5 - $y, 2)) / 1.3 +
		$i / 12
	)
	lset tab $i $x $y $(4 + 4 * sin($key))
}}}

proc sinewave {iter} {
	global tab

	loop reps 0 $iter {
		loop i 0 80 {
			cube.begin
			cube.colour $($i * 2)
			loop x 0 4 { loop y 0 4 {
				set z [lindex $tab $i $x $y]
				cube.led $x		$y		$z
				cube.led $x		$(7 - $y)	$z
				cube.led $(7 - $x)	$y		$z
				cube.led $(7 - $x)	$(7 - $y)	$z
			}}
			cube.commit
			delay 8
		}
	}
	cube.clear
}

if {!$interactive} { sinewave 10 }

