
# A jim version of the PulsingSphere animation.
# Derived from the animation of the same name within the
#  * 8 x 8 x 8 Cube Application Template, Version 7.0  Â© 2014 by Doug Domke
#  * Downloads of this template and upcoming versions, along with detailed
#  * instructions, are available at: http://d2-webdesign.com/cube


# Build distance table
set ::PulsingSphere::distance [lrepeat 8 [lrepeat 8 [lrepeat 8 0]]]
loop x 0 8 { loop y 0 8 { loop z 0 8 {
	set p $(sqrt(pow($x - 3.5, 2) + pow($y - 3.5, 2) + pow($z - 3.5, 2)))
	lset ::PulsingSphere::distance $x $y $z $p
}}}

proc ::PulsingSphere::draw {size} {
	cube.begin
	loop x 0 8 { loop y 0 8 { loop z 0 8 {
		if {[lindex $::PulsingSphere::distance $x $y $z] < $size} {
			cube.led $x $y $z
		}
	}}}
	cube.commit
}

proc PulsingSphere {{times 12}} {
	loop c 0 $times {
		# Expand
		loop i 0 5 {
			bump_colour 12
			::PulsingSphere::draw $i
			delay 75
		}
		# Contract
		loop i 4 -1 -1 {
			bump_colour 12
			::PulsingSphere::draw $i
			delay 75
		}
	}
}

if {!$interactive} { PulsingSphere 12 }

