{
  "name": "Picube",
  "tagline": "Raspberry Pi Linux Software for the SuperTech-IT 8x8x8 RGB LED Cube",
  "body": "![piCube](/doc/piCube.png)\r\n\r\nRaspberry Pi Software for the SuperTech-IT 8x8x8 RGB LED Cube\r\n\r\n## Installation\r\n\r\n### Install Vanilla Raspbian on your Raspberry Pi\r\n\r\nDownload [Raspbian](https://www.raspberrypi.org/downloads/raspbian/)\r\nand install it on your SD card. The minimal image is sufficient.\r\n\r\n### (Optionally) update the distribution to the latest version\r\n\r\n```console\r\npi$ sudo apt-get update\r\npi$ sudo apt-get dist-upgrade\r\npi$ sudo apt-get clean\r\npi$ sudo shutdown -r now\r\n```\r\n\r\n### Install the real-time linux kernel\r\n\r\nA pre-compiled version of the Linux kernel with the\r\n[RT Preempt](https://rt.wiki.kernel.org/index.php/Main_Page)\r\npatch applied is available for all Raspberry Pi models at picube.uk and\r\ncan be installed as follows.\r\n\r\n```console\r\npi$ wget http://picube.uk/files/rpi-rtlinux-4.4.22-rt30.tar.gz\r\npi$ sudo tar -C / -zxf rpi-rtlinux-4.4.22-rt30.tar.gz\r\n```\r\n\r\n(Alternatively you can build it yourself. There is a good write-up at\r\nhttp://www.frank-durr.de/?p=203 )\r\n\r\n### Disable SD card low-latency-mode (llm)\r\n\r\nAdd the following text to the end of the line in `/boot/cmdline.txt`\r\n\r\n```\r\nsdhci_bcm2708.enable_llm=0\r\n```\r\n\r\n### Allow the pi user to elevate scheduling priority and lock memory.\r\n\r\nAdd the following lines to `/etc/security/limits.conf`\r\n\r\n```\r\npi\t-\tmemlock\t\t51200\r\npi\t-\trtprio\t\t99\r\n```\r\n\r\n### Reboot the Pi\r\n\r\n```console\r\npi$ sudo shutdown -r now\r\n```\r\n\r\n### Install additional software\r\n\r\n```console\r\npi$ sudo apt-get install git\r\n```\r\n\r\n### Clone this repository and build the software\r\n\r\n```console\r\npi$ git clone https://github.com/hummypkg/picube.git\r\npi$ cd picube\r\npi$ make install\r\n```\r\n\r\n### Connect the cube to the Pi\r\n\r\n![Pinout](/doc/GPIO.png)\r\n\r\n### Run the included `paneltest` program\r\n\r\n```console\r\npi$ cube examples/paneltest 5\r\n```\r\n\r\n### Start the interactive shell and play\r\n\r\n```console\r\npi$ cube\r\nWelcome to cube shell (Jim 0.77).\r\n. cube.colour violet\r\n. cube.fill\r\n. cube.clear\r\n. cube.text -twosides Hello\r\n. cube.anim cosine 20\r\n. help\r\n. help cube.colour\r\n. loop p 0 8 { cube.clear; cube.panel $p; delay 500 }\r\n```\r\n\r\nThe shell is an embedded\r\n[Jim Tcl](http://jim.tcl.tk/fossil/doc/trunk/Tcl_shipped.html) interpreter\r\nwhich can be used to write programs to control the cube. There are also a\r\nnumber of built-in animations which have been ported from \r\n[Doug Domke's Cube Application Template](http://d2-webdesign.com/cube)\r\n\r\n### Run some example animation scripts\r\n\r\n```console\r\npi$ cube examples/rain\r\npi$ cube examples/grower\r\n```\r\n\r\nThis is the Super Big Show from \r\n[Doug Domke's Cube Application Template](http://d2-webdesign.com/cube)\r\n\r\n```console\r\npi$ cube examples/Super_Big_Show\r\n```\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}